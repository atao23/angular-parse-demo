/*
    app.js
    code for our demo application
 */

"use strict";

//this is the base URL for all task objects managed by your application
//requesting this with a GET will get all tasks objects
//sending a POST to this will insert a new task object
//sending a PUT to this URL + '/' + task.objectId will update an existing task
//sending a DELETE to this URL + '/' + task.objectId will delete an existing task
var tasksUrl = 'https://api.parse.com/1/classes/tasks';

angular.module('ToDoApp', ['ui.bootstrap'])
    .config(function($httpProvider) {
        //Parse required two extra headers sent with every HTTP request: X-Parse-Application-Id, X-Parse-REST-API-Key
        //the first needs to be set to your application's ID value
        //the second needs to be set to your application's REST API key
        //both of these are generated by Parse when you create your application via their web site
        //the following lines will add these as default headers so that they are sent with every
        //HTTP request we make in this application
        $httpProvider.defaults.headers.common['X-Parse-Application-Id'] = '3roVQv9SGuVVHFQObah4wPGtM39ZnlGKbN2oRNcH';
        $httpProvider.defaults.headers.common['X-Parse-REST-API-Key'] = 'PniaAY5cu2SAQZBHU6rElAyVxNsn7RUFbwuzHJJ6';
    })

    .controller('TasksController', function($scope, $http) {
        $scope.refreshTasks = function() {
            $scope.loading = true;
            //get all task objects saved by my application on Parse.com
            $http.get(tasksUrl + '?where={"done" : false}')
                .success(function(data) {
                    //Parse.com returns an object with one property called 'results'
                    //that contains an array of all task objects
                    $scope.tasks = data.results;
                })
                .error(function(err) {
                    $scope.errorMessage = err;
                })
                .finally(function() {
                    $scope.loading = false;
                });
        };

        $scope.refreshTasks();

        $scope.newTask = {done: false};

        //function to add a new task to the list
        $scope.addTask = function() {
            $scope.inserting = true; 
            
            //POST will add (insert) a new item to the class
            $http.post(tasksUrl, $scope.newTask)
                .success(function(responseData) {
                    //Parse.com will return the new objectID in the response data
                    //copy that to te task we just inserted
                    $scope.newTask.objectId = responseData.objectId;

                    //add that task to our task list
                    $scope.tasks.push($scope.newTask);

                    //reset the newTask to clear the form
                    $scope.newTask = {done: false};
                })
                .error(function(err) {
                    $scope.errorMessage = err;
                })

                .finally(function() {
                    $scope.inserting = false;
                });
        };

        //function to update an existing task
        $scope.updateTask = function(task) {
            $http.put(tasksUrl + '/' + task.objectId, task)
                .success(function() {
                    //we could give some feedback to the user
                })
                .error(function(err) {
                    $scope.errorMessage = err;
                });
        };

        $scope.incrementVotes = function(task, amount) {
            $scope.updating = true;
            $http.put(tasksUrl + '/' + task.objectId, {
                votes : {
                    __op: 'Increment',
                    amount: amount
                }
            })
                .success(function(data) {
                    task.votes = data.votes;
                })
                .error(function(error) {
                    console.log(error);
                })
                .finally(function() {
                    $scope.updating = false;
                })
        };
    });
